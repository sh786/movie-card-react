{"version":3,"sources":["MovieCard.js","App.js","index.js"],"names":["Actor","actor","useState","isHovered","setIsHovered","className","onMouseEnter","e","onMouseLeave","split","MovieCard","apiKey","apiUrl","movieID","movieData","setMovieData","isMovieDataLoaded","setIsMovieDataLoaded","useEffect","a","fetch","json","then","res","console","log","catch","err","getMovieData","Fragment","src","Poster","alt","Title","Array","apply","Math","floor","imdbRating","map","item","index","key","imdbVotes","Plot","Actors","i","App","ReactDOM","render","document","getElementById"],"mappings":"iSA8DMA,G,MAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACOC,oBAAS,GADhB,mBACpBC,EADoB,KACTC,EADS,KAW3B,OACE,yBAAKC,UAAU,eAAeC,aATP,SAAAC,GACvBH,GAAa,IAQiDI,aALvC,SAAAD,GACvBH,GAAa,KAKX,uBAAGC,UAAU,aACVJ,EAAMQ,MAAM,KAAK,GAAG,GAAKR,EAAMQ,MAAM,KAAK,GAAG,IAE/CN,EAAY,uBAAGE,UAAU,gBAAgBJ,GAAa,QAK9CS,EAhFG,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAAc,EACfX,mBAAS,IADM,mBAC1CY,EAD0C,KAC/BC,EAD+B,OAECb,oBAAS,GAFV,mBAE1Cc,EAF0C,KAEvBC,EAFuB,KAuBjD,OAnBAC,qBAAU,YACU,uCAAG,sBAAAC,EAAA,sEACIC,MAAM,GAAD,OAAIR,EAAJ,mBAAqBD,EAArB,cAAiCE,IAD1C,cAIhBQ,OACAC,MAAK,SAAAC,GACJC,QAAQC,IAAR,sBAA2BF,IAC3BR,EAAaQ,GACbN,GAAqB,MAEtBS,OAAM,SAAAC,GACLH,QAAQC,IAAIE,MAXG,2CAAH,qDAelBC,KACC,CAAChB,EAAQD,EAAQE,IAGlB,yBAAKR,UAAU,aACXW,EAGA,kBAAC,IAAMa,SAAP,KACE,yBAAKxB,UAAU,mBACb,yBAAKyB,IAAKhB,EAAUiB,OAAQC,IAAKlB,EAAUmB,SAE7C,yBAAK5B,UAAU,QACb,wBAAIA,UAAU,cAAcS,EAAUmB,OACtC,yBAAK5B,UAAU,yBACb,uBAAGA,UAAU,eACV6B,MAAMC,MAAM,EAAGD,MAAME,KAAKC,MAAMvB,EAAUwB,cAAcC,KACvD,SAACC,EAAMC,GAEL,OADAjB,QAAQC,IAAIgB,GACL,uBAAGpC,UAAU,aAAaqC,IAAKD,QAI5C,uBAAGpC,UAAU,cAAcS,EAAU6B,UAArC,aAEF,yBAAKtC,UAAU,qBACf,uBAAGA,UAAU,aAAaS,EAAU8B,MACpC,yBAAKvC,UAAU,mBACZS,EAAU+B,OAAOpC,MAAM,MAAM8B,KAAI,SAACtC,EAAO6C,GACxC,OAAO,kBAAC,EAAD,CAAO7C,MAAOA,EAAOyC,IAAKI,UAvBzC,2CCXOC,G,MAVH,WACV,OACE,yBAAK1C,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAWM,OARH,WAQoBC,OAPpB,0BAOqCC,QANpC,kBCDjBmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.68d2abe6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MovieCard.css';\n\nconst MovieCard = ({ apiKey, apiUrl, movieID }) => {\n  const [movieData, setMovieData] = useState([]);\n  const [isMovieDataLoaded, setIsMovieDataLoaded] = useState(false);\n\n  useEffect(() => {\n    const getMovieData = async () => {\n      const response = await fetch(`${apiUrl}?apiKey=${apiKey}&i=${movieID}`);\n\n      response\n        .json()\n        .then(res => {\n          console.log(`Movie Data: ${res}`);\n          setMovieData(res);\n          setIsMovieDataLoaded(true);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n\n    getMovieData();\n  }, [apiUrl, apiKey, movieID]);\n\n  return (\n    <div className='movieCard'>\n      {!isMovieDataLoaded ? (\n        <p>Loading...</p>\n      ) : (\n        <React.Fragment>\n          <div className='posterContainer'>\n            <img src={movieData.Poster} alt={movieData.Title} />\n          </div>\n          <div className='info'>\n            <h1 className='movieTitle'>{movieData.Title}</h1>\n            <div className='movieRatingsContainer'>\n              <p className='movieRating'>\n                {Array.apply(0, Array(Math.floor(movieData.imdbRating))).map(\n                  (item, index) => {\n                    console.log(index);\n                    return <i className='fa fa-star' key={index} />;\n                  }\n                )}\n              </p>\n              <p className='movieVotes'>{movieData.imdbVotes} ratings</p>\n            </div>\n            <div className='movieInfoDivider'></div>\n            <p className='moviePlot'>{movieData.Plot}</p>\n            <div className='actorsContainer'>\n              {movieData.Actors.split(', ').map((actor, i) => {\n                return <Actor actor={actor} key={i} />;\n              })}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nconst Actor = ({ actor }) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = e => {\n    setIsHovered(true);\n  }\n\n  const handleMouseLeave = e => {\n    setIsHovered(false);\n  }\n\n  return (\n    <div className='actorContent' onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n      <p className='actorIcon'>\n        {actor.split(' ')[0][0] + actor.split(' ')[1][0]}\n      </p>\n      {isHovered ? <p className='actorTooltip'>{actor}</p> : null}\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React from 'react'\nimport MovieCard from './MovieCard'\nimport './App.css'\n\nconst API_KEY = 'c2ecec45'\nconst API_URL = 'https://www.omdbapi.com'\nconst MOVIE_ID = 'tt0816692'\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <div className='container'>\n        <MovieCard apiKey={API_KEY} apiUrl={API_URL} movieID={MOVIE_ID} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}